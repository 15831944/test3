CvSeq* contours = NULL;
			CvMemStorage* storage = cvCreateMemStorage(0);

			IplImage *contoursImage = cvCreateImage(cvGetSize(pGrepImage), 8, 1); 
			IplImage *imgColor = cvCreateImage(cvGetSize(pGrepImage), 8, 3);

			cvThreshold(pGrepImage, pGrepImage, 100, 255, CV_THRESH_BINARY);
			cvCvtColor(pGrepImage, imgColor, CV_GRAY2BGR);

 			cvFindContours(pGrepImage, storage, &contours, sizeof(CvContour),CV_RETR_CCOMP, CV_CHAIN_APPROX_NONE, cvPoint(0,0));  //CV_RETR_LIST, CV_CHAIN_APPROX_SIMPLE	//CV_RETR_CCOMP, CV_CHAIN_APPROX_NONE

			int i = 0;
			for (; contours!=NULL; contours = contours->h_next)
			{
				for (i=0; i<contours->total; i++)									//提取一个轮廓的所有坐标点
				{
					CvPoint *pt = (CvPoint*) cvGetSeqElem(contours, i);				//得到一个轮廓中一个点的函数cvGetSeqElem
					cvSetReal2D(contoursImage, pt->y, pt->x, 255.0);
					cvSet2D(imgColor, pt->y, pt->x, cvScalar(0,0,255,0)); 
				}

				CvSeq *InterCon = contours->v_next;
				for(; InterCon != 0; InterCon = InterCon ->h_next) 
				{
					for(i = 0; i < InterCon->total; i++ )  
					{  
						CvPoint *pt = (CvPoint*)cvGetSeqElem(InterCon, i);  
						cvSetReal2D(contoursImage, pt->y, pt->x, 255.0);  
						cvSet2D(imgColor, pt->y, pt->x, cvScalar(0, 255, 0, 0));  
					}  
				}
			}

			cvNamedWindow("contoursImage");  
			cvShowImage("contoursImage", contoursImage); 

			cvNamedWindow("imgColor");  
			cvShowImage("imgColor",imgColor);